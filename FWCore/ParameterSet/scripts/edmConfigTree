#!/bin/bash

# Deep-searches CMSSW config files, and displays the tree structure of all include files in it.
# K. Banicz

function findFile(){
    # Finds the first occurence of the sought file in CMSSW_SEARCH_PATH
    # argument 1: the sought file

    IFS=:
    for SEARCH_PATH in $CMSSW_SEARCH_PATH; do
	[ -f $SEARCH_PATH/$1 ] && FOUND_FILE=$SEARCH_PATH/$1 && return 0
    done    

    # Not found.
    FOUND_FILE=""
    return 1
}

function findInFile(){
    # Finds all occurrences of the sought expression in the file.
    # Invokes itself on all included files too.
    # argument 1: indent
    # argument 2: the searched file
    # argument 3: the sought expression

    #
    # Load include files into an array
    #
    # We don't want descend into commented-out include files. Get rid of comments in four steps:
    #   1) hide number signs (#)
    #   2) use c preprocessor to remove /*multi-line*/ and //inline comments 
    #   3) restore #s
    #   4) remove #inline comments ( keeping in mind that a # inside a 'string' or "string" does not imply inline comment )
    IFS="
"
    local -a INCLUDE_FILES_ARRAY
    INCLUDE_FILES_ARRAY=( $( \
	sed -e 's/N/Nn/g;s/#/NS/g' $2 | \
	cpp -P -w  - - | \
	sed -e 's/NS/#/g;s/Nn/N/g' | \
	sed -e "s:^\(\(\([^\"'#]*\"[^\"]*\"[^\"'#]*\)\|\([^\"'#]*'[^']*'[^\"'#]*\)\)*\)#*.*$:\1:" | \
	grep "include[[:space:]]*[\"'][[:alnum:]\./_-+~]\+[\"'][[:space:]]*$" | \
	sed -e "s:^\(.*\)include[[:space:]]*[\"']\([[:alnum:]\./_-+~]\+\)[\"'][[:space:]]*$:\2:" \
	) )

    #
    # First list all occurrences in this file:
    #
    if [ ${#3} -ne 0 ]; then
	if [ $EDMCONFIGTREE_TREE == "false" ]; then
	    grep -H -n $3 $2
	else
	    grep $3 $2 | while read LINE_WITH_MATCH; do
		if [ $EDMCONFIGTREE_COLOR == "false" ]; then
		    [ ${#INCLUDE_FILES_ARRAY[@]} -gt 0 ] && echo -n "$1	|" || echo -n "$1	"
		    echo "     $LINE_WITH_MATCH" | grep $3
		else
		    [ ${#INCLUDE_FILES_ARRAY[@]} -gt 0 ] && echo -n "$1	[0;34m|[0m" || echo -n "$1	"
		    echo "     $LINE_WITH_MATCH" | grep --color $3
		fi
	    done
	fi
    fi

    #
    # Now find all 'include'-d files and search them too
    #
    local I
    for (( I=0; I<${#INCLUDE_FILES_ARRAY[@]}; I++ )); do
	local INCLUDE_FILE=${INCLUDE_FILES_ARRAY[$I]}
	local INDENT
	local II
	((II=I+1))
	if [ $EDMCONFIGTREE_TREE == "false" ]; then
	    if findFile "$INCLUDE_FILE"; then
		echo "$FOUND_FILE"
		findInFile "" "$FOUND_FILE" "$3"
	    else
		echo "${INCLUDE_FILE} *** not found in CMSSW_SEARCH_PATH ***"
	    fi
	else
	    if findFile "$INCLUDE_FILE"; then
		[ $SHOW_ABSOLUTE_PATH == "true" ] && NAME_TO_SHOW=FOUND_FILE || NAME_TO_SHOW=INCLUDE_FILE
		if [ $EDMCONFIGTREE_COLOR == "false" ]; then
		    echo "$1	|-- ${!NAME_TO_SHOW}"
		    [ $II -ge ${#INCLUDE_FILES_ARRAY[@]} ] && INDENT="$1	" || INDENT="$1	|"
		else
		    echo "$1	[1;44m [0m [33m${!NAME_TO_SHOW%%*([^/])}[0m${!NAME_TO_SHOW##*/}"
		    [ $II -ge ${#INCLUDE_FILES_ARRAY[@]} ] && INDENT="$1	" || INDENT="$1	[0;34m|[0m"
		fi
		findInFile "$INDENT" "$FOUND_FILE" "$3"
	    else
		if [ $EDMCONFIGTREE_COLOR == "false" ]; then
		    echo "$1	|-- ${INCLUDE_FILE} *** not found in CMSSW_SEARCH_PATH ***"
		else
		    echo -n "$1	[1;44m [0m [33m${INCLUDE_FILE%%*([^/])}[0m${INCLUDE_FILE##*/} "
		    echo "[43m not found in CMSSW_SEARCH_PATH [0m"
		fi
	    fi
	fi
    done

}

# Take care of the relevant shell variables.
${EDMCONFIGTREE_COLOR:=true}
${EDMCONFIGTREE_TREE:=true}
[ $EDMCONFIGTREE_TREE == "false" ] && EDMCONFIGTREE_COLOR=false

# Invoked with a wrong number of arguments. Give help.
if [ $# -eq 0 ] || [ $# -gt 2 ]; then
    cat <<EOF
edmConfigTree displays the complete tree of include files in a given CMSSW configuration file,
and optionally searches them recursively for a regular expression.

Usage:
           [34medmConfigTree [regex] configuration_file[0m
               regex             :    regular expression, as with grep
               configuration_file:    CMSSW configuration file
                                      (Give absolute path to display included files' resolved absolute path.)

           Note that the shell variable CMSSW_SEARCH_PATH must be set before edmConfigTree is invoked.

           To suppress colors, set the shell variable EDMCONFIGTREE_COLOR=false
           To suppress the tree structure (and the colors), set the shell variable EDMCONFIGTREE_TREE=false

Examples:
           Display the tree of all included files in EvtGen+DetSim+Digi.cfg:
                 [34medmConfigTree EvtGen+DetSim+Digi.cfg[0m
           Display with absolute paths the tree of all included files in EvtGen+DetSim+Digi.cfg:
                 [34medmConfigTree $PWD/EvtGen+DetSim+Digi.cfg[0m
           Recursively search all included files for "Verbosity":
                 [34medmConfigTree Verbosity EvtGen+DetSim+Digi.cfg[0m
           Recursively search all included files for "Time" or "time":
                 [34medmConfigTree "[Tt]ime" EvtGen+DetSim+Digi.cfg[0m
EOF
    exit 1
fi

# Exit if CMSSW_SEARCH_PATH is not set.
if [ ${#CMSSW_SEARCH_PATH} -eq 0 ]; then
    echo "CMSSW_SEARCH_PATH is not set. Exiting."
    exit 1
fi

# Set extglob for extended pattern matching features in parameter expansion.
shopt -s extglob

# If invoked with one argument, list files.
if [ $# -eq 1 ]; then
    FILE=$1
    [ ${FILE:0:1} == "/" ] && SHOW_ABSOLUTE_PATH=true || SHOW_ABSOLUTE_PATH=false
    [ $EDMCONFIGTREE_COLOR == "false" ] && echo "$FILE" || echo "[1;44m [0m [33m${FILE%%*([^/])}[0m${FILE##*/}"
    findInFile "" $1
fi

# If invoked with two arguments, list files and search them.
if [ $# -eq 2 ]; then
    FILE=$2
    [ ${FILE:0:1} == "/" ] && SHOW_ABSOLUTE_PATH=true || SHOW_ABSOLUTE_PATH=false
    [ $EDMCONFIGTREE_COLOR == "false" ] && echo "$FILE" || echo "[1;44m [0m [33m${FILE%%*([^/])}[0m${FILE##*/}"
    findInFile "" $2 "$1"
fi
