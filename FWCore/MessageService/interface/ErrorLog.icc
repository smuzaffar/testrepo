#ifndef ERRORLOG_ICC
  #error ErrorLog.icc erroneously included by file other than ErrorLog.h
#endif


// ----------------------------------------------------------------------
//
// ErrorLog.icc
//
// ----------------------------------------------------------------------


// Possible Traces:
// #define ErrorLog_EMIT_TRACE

#include <cstdlib>


namespace edm {       
namespace service {       


// ----------------------------------------------------------------------
// Global method for physicists logging errors:
// ----------------------------------------------------------------------

#ifdef ErrorLog_EMIT_TRACE
#include <string>
#endif

template< class T >
ErrorLog & operator<<( ErrorLog & e, const T & t )  {

  if (e.discarding) return e;

  std::ostringstream  ost;
  ost << t << ' ';

  #ifdef ErrorLog_EMIT_TRACE
    std::cerr << "=:=:=: ErrorLog_EMIT_TRACE: " << t << "\n"
	      << "                            " << ost.str() << std::endl;
    std::cerr << "                            " << "sizeof(t) = " 
						<<  sizeof(t) << std::endl; 
  #endif

  return  e.emit( ost.str() );

}  // operator<< <T>()

// ----------------------------------------------------------------------

// ----------------------------------------------------------------------
// Rapid discarding of below-threshold debug messages:
// ----------------------------------------------------------------------

ErrorLog & ErrorLog::operator() ( int debugLevel )
{

  if ( debugLevel > debugVerbosityLevel ) {
    discarding = true;
    return *this;
  }

  return operator() ( debugSeverityLevel, debugMessageId );

}  // operator()( debugLevel )



}        // end of namespace service
}        // end of namespace edm
