#ifndef ELTSERRORLOG_ICC
  #error ELtsErrorLog.icc erroneously included by wrong file 
#endif

// ----------------------------------------------------------------------
//
// ELtsErrorLog.icc
//
// ----------------------------------------------------------------------

#include <iostream>

namespace edm {       
namespace service {       


// ----------------------------------------------------------------------
// Message Continuation:
//  Global methods for physicists logging errors:
//   Basic streaming for non-integer types:
// ----------------------------------------------------------------------

template <class T>
void ELtsItem ( ELtsErrorLog & e, const T & t ) {
  if (e.e.discarding) return e;
  std::ostringstream  ost;
  ost << t << ' ';
  e.msg.emit ( ost.str() ); 
}  

// ----------------------------------------------------------------------
// Message Continuation:
//   streaming for char[]
// ----------------------------------------------------------------------

void ELtsItem ( ELtsErrorLog & e, const char s[] ) {
  e.item( ELstring(s) );
}

// ----------------------------------------------------------------------
// Message Continuation:
//   special streaming for integer types
// ----------------------------------------------------------------------

void ELtsItem( ELtsErrorLog & e, int n )  {
  e.item(n);
}

void ELtsItem( ELtsErrorLog & e, unsigned int n )  {
  e.item(n);
}

void ELtsItem( ELtsErrorLog & e, long n )  {
  e.item(n);
}

void ELtsItem( ELtsErrorLog & e, unsigned long n )  {
  e.item(n);
}

void ELtsItem( ELtsErrorLog & e, short n )  {
  e.item(n);
}

void ELtsItem( ELtsErrorLog & e, unsigned short n )  {
  e.item(n);
}

}        // end of namespace service
}        // end of namespace edm

