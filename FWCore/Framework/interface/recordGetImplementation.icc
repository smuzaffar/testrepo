#ifndef EVENTSETUP_RECORDGETIMPLEMENTATION_ICC
#define EVENTSETUP_RECORDGETIMPLEMENTATION_ICC

// -*- C++ -*-
//
// Package:     CoreFramework
// Class  :     recordGetImplementation
// 
// Implementation:
//     <Notes on implementation>
//
// Author:      Chris Jones
// Created:     Fri Apr  1 15:29:14 EST 2005
// $Id: recordGetImplementation.icc,v 1.3 2005/06/23 19:59:30 wmtan Exp $
//

// system include files

// user include files
#include "FWCore/CoreFramework/interface/EventSetupRecordImplementation.h"
#include "FWCore/CoreFramework/interface/DataKey.h"
#include "FWCore/CoreFramework/interface/DataProxyTemplate.h"
#include "FWCore/CoreFramework/interface/NoProxyException.h"

namespace edm {
   namespace eventsetup {
template <typename T>
template < typename DataT > 
void 
EventSetupRecordImplementation<T>::getImplementation(DataT const *& iData ,
                                                     const char* iName) const 
{
   DataKey key(DataKey::makeTypeTag<DataT>(),
               iName,
               DataKey::kDoNotCopyMemory);
   
   const DataProxyTemplate<T, DataT>* proxy = 
      static_cast<const DataProxyTemplate<T, DataT>* >(this->find(key));
   
   const DataT* hold = 0;
   if(0 != proxy) {
      // add data key to the stack
      //DAExceptionStackEntry stackEntry(d_key);
      
      hold = proxy->get(static_cast<const T&>(*this), key);
   } else {
      // add durable data key to the stack in order to catch it
      //DAExceptionStackEntry stackEntry(d_key,DAExceptionStackEntry::kUseDurable)
      ;
      
      throw NoProxyException<DataT>(*this, key);
   }
   iData = hold;
}

   }
}
#endif /* EVENTSETUP_RECORDGETIMPLEMENTATION_TCC */
