#ifndef Framework_HCTypeTagTemplate_icc
#define Framework_HCTypeTagTemplate_icc
// -*- C++ -*-
//
// Package:     HeteroContainer
// Module:      HCTypeTagTemplate
// 
// Description: <one line class summary>
//
// Implementation:
//     <Notes on implementation>
//
// Author:      Chris D Jones
// Created:     Wed Sep 30 11:09:00 EDT 1998
// $Id: HCTypeTagTemplate.icc,v 1.4 2005/09/01 05:19:45 wmtan Exp $
//
// Revision history
//
// $Log: HCTypeTagTemplate.icc,v $
// Revision 1.4  2005/09/01 05:19:45  wmtan
// Fix Rules violations found by RuleChecker
//
// Revision 1.3  2005/07/14 22:50:52  wmtan
// Rename packages
//
// Revision 1.2  2005/06/23 19:59:30  wmtan
// fix rules violations found by rulechecker
//
// Revision 1.1  2005/05/29 02:29:53  wmtan
// initial population
//
// Revision 1.2  2005/04/18 15:36:58  chrjones
// classValue code moved to this file to allow control of exactly what compilation unit sees it
//
// Revision 1.1  2005/03/28 15:03:30  chrjones
// first submission
//
// Revision 1.2  1999/10/08 13:42:47  urner
// avoid multiple inclusion of HCTypeTagTemplate.cc
//
// Revision 1.1  1998/09/30 15:41:52  cdj
// first submission
//

// system include files

// user include files
#include "FWCore/Framework/interface/HCTypeTagTemplate.h"

// STL classes

//
// constants, enums and typedefs
//

//static const char* const kFacilityString = "HeteroContainer.HCTypeTagTemplate" ;

//
// static member functions
//

//Require specialization
/*
template < class T, class Group >
const char*
HCTypeTagTemplate<T,Group>::className()
{
   return "";
}
*/
namespace edm {
   namespace eventsetup {
      namespace heterocontainer {

template<class T, class Group >
unsigned int 
HCTypeTagTemplate<T,Group>::classValue() {
   static unsigned int theValue = nextValue(className());
   return theValue; 
}
}
}
}
#endif
