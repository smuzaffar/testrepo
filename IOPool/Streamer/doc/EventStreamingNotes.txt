
22-8-05 jbk:

Things that need to be done for the event streaming output/input modules:

The TBuffer needs to become a data member of the class and SetBuffer
needs to be called for each event.

The input module is hard coded to read the streamed events from a file.
It needs to be converted to work like the output module - where the
network protocol driver is a template parameter.

The "AuxEvent" and the process history and not handled at all.

Each product in an event gets a copy of all the provenance information.
In the future, we may be able to send a table in the event header that
contains all the common provenance information and then reference it in
the per-product provenance information.

The StreamCopy/JunkCopy test configurations still do not run.  This
may be an environment issue, because JunkCopy test just uses the 
POOL output modules and input modules to do its work.

23-8-05 jbk:

Converted input service to use a similar protocol object for doing the
transfer or save of the streamed events as the streaming output module.

Still have not checked for memory leaks in input or output modules.

The StreamCopy operations ran for a while until a made a bunch of 
changes.  A fresh rebuild seems to fix the problem.  The problem is
that a warning appears that indicates that the dictionary for the
StreamTestThing cannot be found.  There may be a problem with putting
the test EDProducts into the plugin library.  I should probably move them
elsewhere.

25-8-05 jbk:

The event stream test modules now can write many instances of the 
StreamTestThing of a configured size in order to be load testing.

The filtering of products based on type is not yet in place.

The filtering of products based on provenance or trigger bits is not
in place.

The streaming output module needs to be converted immediately to use the
BeginJob member function to do the product registry writing and 
manupulations.  This is because the fixed IDs for products are not finalized
until all constructors have run and are likely to be zero before that
time.

